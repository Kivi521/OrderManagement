<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OrderDataAccess</name>
    </assembly>
    <members>
        <member name="T:OrderDataAccess.Orders">
            <summary>
            class of orders to manage the orders, connect with all the orders tables of database, contain GetOrderHeaders; GetOrderHeader; InsertOrderHeader; IEnumerable;
            UpsertOrderItem; UpdateOrderState; DeleteOrderHeader; Dlete OrderItems
            </summary>
        </member>
        <member name="M:OrderDataAccess.Orders.#ctor(System.String)">
            <summary>
            set connetionString a value which is cnnStr
            </summary>
            <param name="cnnStr"></param>
        </member>
        <member name="M:OrderDataAccess.Orders.GetOrderHeaders">
            <summary>
            GetOrderHeaders method is for getting all the order header from orderheader database table
            </summary>
            <returns>the list of all the orders from the orderheader database table</returns>
        </member>
        <member name="M:OrderDataAccess.Orders.GetOrderHeader(System.Int32)">
            <summary>
            GetOrderHeader method is for getting a select order header from all the order headers by id to deal with
            </summary>
            <param name="id">order header id</param>
            <returns>the seleted order header</returns>
        </member>
        <member name="M:OrderDataAccess.Orders.InsertOrderHeader(OrderDomain.OrderHeader)">
            <summary>
             InsertOrderHeader method is for insert a new orderheader into orderheader database table
            </summary>
            <param name="header">the new older </param>
            <returns>the insert new order's id</returns>
        </member>
        <member name="M:OrderDataAccess.Orders.GetItemsByHeaderId(System.Int32)">
            <summary>
            GetItemsByHeaderId method is for getting the matched item obey header id
            </summary>
            <param name="orderHeadId">the selected order header id</param>
            <returns> the list of order items</returns>
        </member>
        <member name="M:OrderDataAccess.Orders.UpsertOrderItem(OrderDomain.OrderItem)">
            <summary>
             UpsertOrderItem method has two aims, I will insert an orderItem, if the order item is not exit, the item will be insert, if it is exit, the informatioin will update to the new import.
            </summary>
            <param name="orderItem">the item that I would like to insert or update</param>
            <returns>the number of insert or update orderitem's row </returns>
        </member>
        <member name="M:OrderDataAccess.Orders.UpdateOrderState(OrderDomain.OrderHeader)">
            <summary>
            UpdateOrderState method is for update the order state from new to pending or complete.
            </summary>
            <param name="order">the selected order</param>
            <returns>the number of row that I have update state</returns>
        </member>
        <member name="M:OrderDataAccess.Orders.DeleteOrderHeaderAndOrderItems(System.Int32)">
            <summary>
            DeleteOrderHeaderAndOrderItems method is for delete the orderheader and delete the order items from the database table
            </summary>
            <param name="orderHeaderId">the selected orderheader if</param>
            <returns>sum of the number of delete order header row and the number of delete order item row</returns>
        </member>
        <member name="T:OrderDataAccess.StockItems">
            <summary>
            StockItems method is for manage stock Items, connect with stockItems table of database
            </summary>
        </member>
        <member name="M:OrderDataAccess.StockItems.GetStockItems">
            <summary>
            GetStockItems method if for getting all the stockItems of [add order item view] from stockItems table of database
            </summary>
            <returns>all the stock items and it's price</returns>
        </member>
        <member name="M:OrderDataAccess.StockItems.GetStockItem(System.Int32)">
            <summary>
            GetStockItem method if for getting one stock Item by item id stockItems table of database
            </summary>
            <param name="id">item id</param>
            <returns>the collected stock item</returns>
        </member>
        <member name="M:OrderDataAccess.StockItems.UpdateStockItemAmount(OrderDomain.OrderHeader)">
            <summary>
            UpdateStockItemAmount method is for update the stockItem Amount, if the customer would like to change their amount of collecte item, they could use this method
            </summary>
            <param name="order">an orderHeader</param>
            <returns>the number of rows that the Item amount be changed </returns>
        </member>
    </members>
</doc>
